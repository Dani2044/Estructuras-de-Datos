1. Comando: cargar nombre_archivo
   Descripción: Carga en memoria la información del objeto nombre_objeto contenida en el archivo identificado por nombre_archivo.
   Posibles salidas en pantalla:
   - (Archivo vacío o incompleto) El archivo nombre_archivo no contiene un objeto 3D valido.
   - (Archivo no existe) El archivo nombre_archivo no existe o es ilegible.
   - (Objeto ya existe) El objeto nombre_objeto ya ha sido cargado en memoria.
   - (Resultado exitoso) El objeto nombre_objeto ha sido cargado exitosamente desde el archivo nombre_archivo.

2. Comando: listado
   Descripción: Lista los objetos cargados actualmente en memoria, junto con la información básica de cada uno: cantidad de puntos, de aristas y de caras.
   Posibles salidas en pantalla:
   - (Memoria vacía) Ningún objeto ha sido cargado en memoria.
   - (Resultado exitoso) Hay n objetos en memoria:
     nombre_objeto_1 contiene n_1 vértices, a_1 aristas y c_1 caras.
     nombre_objeto_2 contiene n_2 vértices, a_2 aristas y c_2 caras.
     ...

3. Comando: envolvente nombre_objeto
   Descripción: Calcula la caja envolvente del objeto identificado por nombre_objeto. Esta caja envolvente se define a partir de dos puntos, pmin y pmax, los cuales determinan los límites de una especie de cuarto donde cabe el objeto completo, es decir, todos los vértices del objeto se encuentran contenidos dentro de la caja. pmin y pmax se calculan como los puntos extremos, en cada dimensión, del conjunto de vértices que define el objeto. La caja envolvente se agrega como un nuevo objeto en memoria, asignándole automáticamente el nombre env_nombre_objeto, para distinguirla de los demás objetos en memoria.
   Posibles salidas en pantalla:
   - (Objeto no existe) El objeto nombre_objeto no ha sido cargado en memoria.
   - (Resultado exitoso) La caja envolvente del objeto nombre_objeto se ha generado con el nombre env_nombre_objeto y se ha agregado a los objetos en memoria.

4. Comando: envolvente
   Descripción: Calcula la caja envolvente que incluye a todos los objetos cargados actualmente en memoria. Esta caja envolvente se calcula de la misma forma que en el comando anterior, sólo que teniendo en cuenta todos los vértices de todos los objetos en memoria, para no dejar ninguno por fuera de la caja. La caja envolvente se agrega como un nuevo objeto en memoria, asignándole automáticamente el nombre env_global, para distinguirla de los demás objetos en memoria.
   Posibles salidas en pantalla:
   - (Memoria vacía) Ningún objeto ha sido cargado en memoria.
   - (Resultado exitoso) La caja envolvente de los objetos en memoria se ha generado con el nombre env_global y se ha agregado a los objetos en memoria.

5. Comando: descargar nombre_objeto
   Descripción: Descarga de la memoria toda la información básica (vértices, aristas, caras) del objeto identificado por nombre_objeto.
   Posibles salidas en pantalla:
   - (Objeto no existe) El objeto nombre_objeto no ha sido cargado en memoria.
   - (Resultado exitoso) El objeto nombre_objeto ha sido eliminado de la memoria de trabajo.

6. Comando: guardar nombre_objeto nombre_archivo
   Descripción: Escribe en un archivo de texto, identificado por nombre_archivo, la información básica (vértices y caras) del objeto identificado por nombre_objeto. El archivo debe seguir el formato presentado en la Subsección 1.1.
   Posibles salidas en pantalla:
   - (Objeto no existe) El objeto nombre_objeto no ha sido cargado en memoria.
   - (Resultado exitoso) La información del objeto nombre_objeto ha sido guardada exitosamente en el archivo nombre_archivo.

7. Comando: v_cercano px py pz nombre_objeto
   Descripción: Identifica el vértice del objeto nombre_objeto más cercano (en términos de la distancia euclidiana) al punto indicado por las coordenadas px, py y pz. Informa en pantalla el índice del vértice, los valores actuales de sus coordenadas, y la distancia a la cual se encuentra del punto dado.
   Posibles salidas en pantalla:
   - (Objeto no existe) El objeto nombre_objeto no ha sido cargado en memoria.
   - (Resultado exitoso) El vértice i (vx, vy, vz) del objeto nombre_objeto es el más cercano al punto (px, py, pz), a una distancia de valor_distancia.

8. Comando: v_cercano px py pz
   Descripción: Identifica, entre todos los objetos cargados en memoria, el vértice más cercano (en términos de la distancia euclidiana) al punto indicado por las coordenadas px, py y pz. Informa en pantalla el objeto al que pertenece, el índice del vértice, los valores actuales de sus coordenadas, y la distancia a la cual se encuentra del punto dado.
   Posibles salidas en pantalla:
   - (Memoria vacía) Ningún objeto ha sido cargado en memoria.
   - (Resultado exitoso) El vértice i (vx, vy, vz) del objeto nombre_objeto es el más cercano al punto (px, py, pz), a una distancia de valor_distancia.

9. Comando: v_cercanos_caja nombre_objeto
   Descripción: Identifica los vértices del objeto nombre_objeto más cercanos (en términos de la distancia euclidiana) a los puntos (vértices) que definen la respectiva caja envolvente del objeto. Informa en pantalla, en una tabla, las coordenadas de cada una de las esquinas de la caja envolvente, y para cada una de ellas, el índice del vértice más cercano, los valores actuales de sus coordenadas, y la distancia a la cual se encuentra de la respectiva esquina.
   Posibles salidas en pantalla:
   - (Objeto no existe) El objeto nombre_objeto no ha sido cargado en memoria.
   - (Resultado exitoso) Los vértices del objeto nombre_objeto más cercanos a las esquinas de su caja envolvente son:
     Esquina Vertice Distancia
     1 (e1x, e1y, e1z) i1 (v1x, v1y, v1z) valor_distancia_1
     2 (e2x, e2y, e2z) i2 (v2x, v2y, v2z) valor_distancia_2
     ...
     8 (e8x, e8y, e8z) i8 (v8x, v8y, v8z) valor_distancia_8

10. Comando: ruta_corta i1 i2 nombre_objeto
    Descripción: Identifica los índices de los vértices que conforman la ruta más corta entre los vértices dados para el objeto nombre_objeto. La distancia entre los vértices está medida en términos de la distancia euclidiana. Informa, además, la distancia total de la ruta calculada.
    Posibles salidas en pantalla:
    - (Objeto no existe) El objeto nombre_objeto no ha sido cargado en memoria.
    - (Índices iguales) Los índices de los vértices dados son iguales.
    - (Índices no existen) Algunos de los índices de vértices están fuera de rango para el objeto nombre_objeto.
    - (Resultado exitoso) La ruta más corta que conecta los vértices i1 y i2 del objeto nombre_objeto pasa por: i1, v1, v2, ..., vn, i2; con una longitud de valor_distancia.

11. Comando: ruta_corta_centro i1 nombre_objeto
    Descripción: Identifica los índices de los vértices que conforman la ruta más corta entre el vértice dado y el centro del objeto nombre_objeto. El vértice centro del objeto se identifica calculando el centroide (coordenadas promedio) de todos los vértices del objeto, este punto es agregado entonces a la representación del objeto. Luego, se busca el vértice del objeto más cercano a ese centroide, y se conecta con el centroide por medio de una arista. Finalmente, se utiliza el mismo proceso del comando anterior para buscar la ruta más corta entre el centroide (ya conectado dentro del objeto) y el vértice dado. La distancia entre los vértices está medida en términos de la distancia euclidiana. Informa, además, la distancia total de la ruta calculada.
    Posibles salidas en pantalla:
    - (Objeto no existe) El objeto nombre_objeto no ha sido cargado en memoria.
    - (Índice no existe) El índice de vértice está fuera de rango para el objeto nombre_objeto.
    - (Resultado exitoso) La ruta más corta que conecta el vértice i1 con el centro del objeto nombre_objeto, ubicado en ct (ctx, cty, ctz), pasa por: i1, v1, v2, ..., ct; con una longitud de valor_distancia.

12. Comando: salir
    Descripción: Termina la ejecución de la aplicación.
    Posibles salidas en pantalla:
    - (No tiene salida por pantalla)
